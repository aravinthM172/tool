import pandas as pd
from tqdm import tqdm

# Read the parent-child mapping data
mapping_file_path = "paras-parent-child-info.csv"  # Replace with your file path
parent_child_mapping = pd.read_csv(mapping_file_path)

# Read the detailed information file with multiple sheets
detailed_info_file_path = "Sponsored Products Advertised product report.xlsx"  # Replace with your file path
try:
    xls = pd.ExcelFile(detailed_info_file_path)
except FileNotFoundError as e:
    print(f"File not found error: {e}")
    exit()

# Read the IDs from the Excel file
filepath = "Profit-2023-11-22T11_30_54.490Z.xlsx"
df = pd.read_excel(filepath, skiprows=1)

# Initialize an empty DataFrame to accumulate the filtered data
combined_filtered_data = pd.DataFrame()

for id in tqdm(df['Ids'], desc="Processing IDs"):
    # Check if Parent ID exists in 'paras-parent-child-info.csv'
    filtered_mapping = parent_child_mapping[parent_child_mapping['parentproductid'] == id]
    if filtered_mapping.empty:
        print(f"Parent ID {id} not found in the mapping file.")
        continue

    # Get child IDs associated with the provided parent ID
    child_ids = filtered_mapping['productid'].tolist()

    # Create a DataFrame to store data for the current ID
    current_id_data = pd.DataFrame()

    # Iterate through sheets and retrieve data for the current ID
    for sheet_name in xls.sheet_names:
        try:
            sheet_data = pd.read_excel(detailed_info_file_path, sheet_name, engine='openpyxl')
            if 'ASIN' in sheet_data.columns:
                filtered_sheet_data = sheet_data[
                    (sheet_data['ASIN'].isin(child_ids)) & (~sheet_data['ASIN'].isnull())
                ]

                if not filtered_sheet_data.empty:
                    # Append the filtered data to the DataFrame for the current ID
                    current_id_data = pd.concat([current_id_data, filtered_sheet_data])
        except Exception as e:
            print(f"Error processing sheet '{sheet_name}' for Parent ID {id}: {e}")

    if not current_id_data.empty:
        # Add a new column 'Parent ID' with the current Parent ID
        current_id_data['Parent ID'] = id
        combined_filtered_data = pd.concat([combined_filtered_data, current_id_data])

# Add a new column 'Link' with the link constructed using 'https://www.amazon.in/dp/' and the IDs
combined_filtered_data['Link'] = 'https://www.amazon.in/dp/' + combined_filtered_data['ASIN']

# Save the accumulated filtered data with the 'Link' and 'Parent ID' columns into a single Excel file
output_file_path = "Combined_Filtered_Data_With_Link_ParentID14.xlsx"
combined_filtered_data.to_excel(output_file_path, index=False, engine='openpyxl')
print(f"Combined filtered data with links and parent IDs saved to '{output_file_path}'")
